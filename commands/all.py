
"""
Основной файл, предназначенный для объявления команд
Команды объявляются функцией new_command(pattern, name, handler, type = 'all')
Где:
	pattern -- шаблон команды. Может быть регулярным выражением.
	name -- имя команды. Должно быть уникальным.
	handler -- обработчик команды. Это должен быть класс, наследуемый от .command.Request.
	type -- тип диалога, в котором можно вызывать данную функцию ('chat', 'pm', 'all').

При вызове данной команды вызывается метод call нового экземпляра класса-обработчика с полями:
	self.bot -- сам объект бота
	self.command -- сам объект команды
	self.message -- сам объект сообщения
	self.args -- список аргументов (делятся через пробел)

Пример самой элементарной команды Hello:

class Hello(Request): # класс-обработчик должен быть производным от Request
	def call(self):
		return "hello!" # возвращает строку "hello!".

# Также вместо инструкции возврата строки может быть использован метод self.response(**kwargs). Он используется, если
# нужно в метод messages.send передать еще какой-либо параметр помимо "message".

new_command(pattern = r'(!|/)hello', name = 'hello', handler = Hello, type = 'all') # Сама команда

Данные классы могут быть объявлены в любом месте кода, даже в этом файле. Но лучше в отдельных.
"""

from .command import *

from . import other

new_command(pattern = r'(!|/|)привет', name = 'hello', handler = other.Hello, type = 'all')